definitions:
  contract.BaseResponse:
    properties:
      status_code:
        type: integer
      status_info:
        $ref: '#/definitions/contract.StatusInfo'
    type: object
  contract.BorrowBookRequest:
    properties:
      book_id:
        type: integer
    required:
    - book_id
    type: object
  contract.BorrowBookResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
    type: object
  contract.CreateBookRequest:
    properties:
      book:
        $ref: '#/definitions/entity.Book'
    type: object
  contract.CreateBookResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
    type: object
  contract.DeleteBookResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
    type: object
  contract.DeleteUserResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
    type: object
  contract.GetUserInfoResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
      user:
        $ref: '#/definitions/entity.User'
    type: object
  contract.ListAllBookRecordsRequest:
    properties:
      page:
        type: integer
      page_size:
        type: integer
    required:
    - page
    - page_size
    type: object
  contract.ListAllBookRecordsResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
      page_info:
        $ref: '#/definitions/entity.PageInfo'
      records:
        items:
          $ref: '#/definitions/entity.Record'
        type: array
    type: object
  contract.ListAllBorrowedBookRequest:
    properties:
      page:
        type: integer
      page_size:
        type: integer
    required:
    - page
    - page_size
    type: object
  contract.ListAllBorrowedBookResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
      page_info:
        $ref: '#/definitions/entity.PageInfo'
      records:
        items:
          $ref: '#/definitions/entity.Record'
        type: array
    type: object
  contract.ListAllReturnedBookRequest:
    properties:
      page:
        type: integer
      page_size:
        type: integer
    required:
    - page
    - page_size
    type: object
  contract.ListAllReturnedBookResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
      page_info:
        $ref: '#/definitions/entity.PageInfo'
      records:
        items:
          $ref: '#/definitions/entity.Record'
        type: array
    type: object
  contract.ListAllUsersRequest:
    properties:
      page:
        type: integer
      page_size:
        type: integer
    required:
    - page
    - page_size
    type: object
  contract.ListAllUsersResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
      users:
        items:
          $ref: '#/definitions/entity.User'
        type: array
    type: object
  contract.ListBookRecordsRequest:
    properties:
      page:
        type: integer
      page_size:
        type: integer
    required:
    - page
    - page_size
    type: object
  contract.ListBookRecordsResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
      page_info:
        $ref: '#/definitions/entity.PageInfo'
      records:
        items:
          $ref: '#/definitions/entity.Record'
        type: array
    type: object
  contract.ListBooksRequest:
    properties:
      page:
        type: integer
      page_size:
        type: integer
    required:
    - page
    - page_size
    type: object
  contract.ListBooksResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
      books:
        items:
          $ref: '#/definitions/entity.Book'
        type: array
      page_info:
        $ref: '#/definitions/entity.PageInfo'
    type: object
  contract.ListBorrowedBookRequest:
    properties:
      page:
        type: integer
      page_size:
        type: integer
    required:
    - page
    - page_size
    type: object
  contract.ListBorrowedBookResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
      page_info:
        $ref: '#/definitions/entity.PageInfo'
      records:
        items:
          $ref: '#/definitions/entity.Record'
        type: array
    type: object
  contract.ListReturnedBookRequest:
    properties:
      page:
        type: integer
      page_size:
        type: integer
    required:
    - page
    - page_size
    type: object
  contract.ListReturnedBookResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
      page_info:
        $ref: '#/definitions/entity.PageInfo'
      records:
        items:
          $ref: '#/definitions/entity.Record'
        type: array
    type: object
  contract.LoginRequest:
    properties:
      user_auth:
        $ref: '#/definitions/entity.UserAuth'
    required:
    - user_auth
    type: object
  contract.LoginResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
      user_info:
        $ref: '#/definitions/entity.User'
    type: object
  contract.RegisterRequest:
    properties:
      user_auth:
        $ref: '#/definitions/entity.UserAuth'
    required:
    - user_auth
    type: object
  contract.RegisterResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
    type: object
  contract.ReturnBookRequest:
    properties:
      book_id:
        type: integer
    required:
    - book_id
    type: object
  contract.ReturnBookResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
    type: object
  contract.StatusInfo:
    properties:
      message:
        type: string
      time:
        type: integer
    type: object
  contract.UpdateBookRequest:
    properties:
      book:
        $ref: '#/definitions/entity.Book'
    type: object
  contract.UpdateBookResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
    type: object
  contract.UpdateUserInfoRequest:
    properties:
      user:
        $ref: '#/definitions/entity.User'
    required:
    - user
    type: object
  contract.UpdateUserInfoResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
    type: object
  entity.Book:
    properties:
      author:
        type: string
      book_id:
        type: integer
      book_name:
        type: string
      category:
        type: string
      description:
        type: string
      img_url:
        type: string
      isbn:
        type: string
      publisher:
        type: string
      rent_status:
        description: 1：未借出 2：已借出
        type: integer
    required:
    - author
    - book_name
    - isbn
    - publisher
    type: object
  entity.PageInfo:
    properties:
      total_count:
        type: integer
      total_pages:
        type: integer
    type: object
  entity.Record:
    properties:
      book:
        $ref: '#/definitions/entity.Book'
      status:
        type: integer
      userId:
        type: integer
    type: object
  entity.User:
    properties:
      avatar_url:
        type: string
      name:
        type: string
      role:
        type: string
      token:
        type: string
      user_id:
        type: string
    required:
    - name
    - user_id
    type: object
  entity.UserAuth:
    properties:
      password:
        type: string
      user_id:
        type: string
    required:
    - password
    - user_id
    type: object
info:
  contact: {}
paths:
  /admin/book/create:
    post:
      consumes:
      - application/json
      description: 新增图书
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: create book request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.CreateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.CreateBookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.CreateBookResponse'
      summary: 新增图书
      tags:
      - admin
  /admin/book/delete/{book_id}:
    delete:
      consumes:
      - application/json
      description: 删除图书
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: delete book id
        in: path
        name: book_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.DeleteBookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.DeleteBookResponse'
      summary: 删除图书
      tags:
      - admin
  /admin/book/record/all:
    post:
      consumes:
      - application/json
      description: 所有用户所有借阅图书记录
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: list all book records request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.ListAllBookRecordsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.ListAllBookRecordsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.ListAllBookRecordsResponse'
      summary: 所有用户所有借阅图书记录
      tags:
      - admin
  /admin/book/record/borrow:
    post:
      consumes:
      - application/json
      description: 所有用户待还图书记录
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: list all borrowed book records request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.ListAllBorrowedBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.ListAllBorrowedBookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.ListAllBorrowedBookResponse'
      summary: 所有用户待还图书记录
      tags:
      - admin
  /admin/book/record/return:
    post:
      consumes:
      - application/json
      description: 所有用户已还图书记录
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: list all returned book records request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.ListAllReturnedBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.ListAllReturnedBookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.ListAllReturnedBookResponse'
      summary: 所有用户已还图书记录
      tags:
      - admin
  /admin/book/update:
    post:
      consumes:
      - application/json
      description: 更改图书
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: update book request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.UpdateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.UpdateBookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.UpdateBookResponse'
      summary: 更改图书信息
      tags:
      - admin
  /admin/user/delete/{user_id}:
    delete:
      consumes:
      - application/json
      description: 删除用户
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: delete user id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.DeleteUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.DeleteUserResponse'
      summary: 删除用户
      tags:
      - admin
  /admin/user/list:
    post:
      consumes:
      - application/json
      description: 所有用户
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: list all user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.ListAllUsersRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.ListAllUsersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.ListAllUsersResponse'
      summary: 获取所有用户
      tags:
      - admin
  /book/borrow:
    post:
      consumes:
      - application/json
      description: 借阅图书
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: borrow book request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.BorrowBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.BorrowBookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.BorrowBookResponse'
      summary: 借阅图书
      tags:
      - user
  /book/list:
    post:
      consumes:
      - application/json
      description: 分页图书
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: list book request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.ListBooksRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.ListBooksResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.ListBooksResponse'
      summary: 图书列表
      tags:
      - user
  /book/record/all:
    post:
      consumes:
      - application/json
      description: 所有借阅图书记录
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: list book records request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.ListBookRecordsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.ListBookRecordsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.ListBookRecordsResponse'
      summary: 所有借阅图书记录
      tags:
      - user
  /book/record/borrow:
    post:
      consumes:
      - application/json
      description: 待还图书记录
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: list borrowed book request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.ListBorrowedBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.ListBorrowedBookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.ListBorrowedBookResponse'
      summary: 待还图书记录
      tags:
      - user
  /book/record/return:
    post:
      consumes:
      - application/json
      description: 已还图书记录
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: list returned book request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.ListReturnedBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.ListReturnedBookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.ListReturnedBookResponse'
      summary: 已还图书记录
      tags:
      - user
  /book/return:
    post:
      consumes:
      - application/json
      description: 归还图书
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: return book request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.ReturnBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.ReturnBookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.ReturnBookResponse'
      summary: 归还图书
      tags:
      - user
  /token/admin:
    get:
      consumes:
      - application/json
      description: 生成管理员token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 生成管理员token
      tags:
      - temp
  /token/user:
    get:
      consumes:
      - application/json
      description: 生成用户token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 生成用户token
      tags:
      - temp
  /user/info:
    get:
      consumes:
      - application/json
      description: 用户信息
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.GetUserInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.GetUserInfoResponse'
      summary: 获取用户信息
      tags:
      - user
  /user/info/update:
    post:
      consumes:
      - application/json
      description: 更新用户信息
      parameters:
      - description: update user info request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.UpdateUserInfoRequest'
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.UpdateUserInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.UpdateUserInfoResponse'
      summary: 更新用户信息
      tags:
      - user
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户登录
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.LoginResponse'
      summary: 登录
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      description: 用户注册
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: register request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.RegisterResponse'
      summary: 注册
      tags:
      - user
swagger: "2.0"
